-- @atlcompiler emftvm
-- @nsURI FSML=http://www.fsml.sle/FSML
-- @nsURI UML=http://www.eclipse.org/uml2/4.0.0/UML


module uml2fsm;
create OUT: FSML from IN: UML;

rule Model2Model {
	from
		s: UML!Region (
			not (UML!Vertex.allInstances().size() = 0)
		)
	to
		t: FSML!FSM (
			states <- s.subvertex
		)
}

rule State2State {
	from
		s: UML!State
	to
		t: FSML!FSMState (
			name <- s.name,
			initial <- false,
			transitions <- UML!Transition.allInstances() -> select(transition | transition.
					source = s)
		)
}

rule Pseudostate2State {
	from
		s: UML!Pseudostate
	to
		t: FSML!FSMState (
			name <- s.name,
			initial <- true,
			transitions <- UML!Transition.allInstances() -> select(transition | transition.
					source = s)
		)
}

rule Transition2Transition {
	from
		s: UML!Transition
	using {
		indexAction: Integer = s.name.lastIndexOf('/');
		hasAction: Boolean = not(indexAction = 0);
	}
	to
		t: FSML!FSMTransition (
			target <- s.target,
			input <- if hasAction then
					s.name.substring(1, indexAction - 1)
				else
					s.name
				endif,
			action <- if hasAction then
					s.name.substring(indexAction + 1, s.name.size())
				else
					OclUndefined
				endif
		)
}
