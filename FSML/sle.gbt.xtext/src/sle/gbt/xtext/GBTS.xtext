grammar sle.gbt.xtext.GBTS with org.eclipse.xtext.common.Terminals

import "http://www.gbt.sle/xtext/sg" as sg
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/2008/Xtext" as xtext
generate gBTS "http://www.gbt.sle/xtext/GBTS"

Model:
	items+=Item+;

Item:
	Def | Apply;

Def:
	'def' name=ID ':' ref=[xtext::Grammar|GrammarID] (hasStartrule?='start' startrule=[xtext::AbstractRule])? ('{'
	substitutions+=Substitution '}')?;

Apply:
	'apply' def=[Def] ':' minOrIt=INT (hasMax?='..' max=INT (hasSpace?='space' space=INT))?;

Substitution:
	'substitute' rule=[xtext::AbstractRule] 'with' substitution=SG ';';

SG returns sg::SG:
	Alternative;

Alternative returns sg::SG:
	Sequence ({sg::Alternative.left=current} '|' right=Alternative)?;

Sequence returns sg::SG:
	Cardinality ({sg::Sequence.left=current} right=Sequence)?;

Cardinality returns sg::SG:
	Operated (({sg::Optional.of=current} '?' | {sg::Star.of=current} '*' | {sg::Plus.of=current} '+'))?;

Operated returns sg::SG:
	'->' {sg::Until} of=Operated | '!' {sg::Negation} of=Operated | Terminal;

Terminal returns sg::SG:
	{sg::Range} min=STRING '..' max=STRING | {sg::Single} token=STRING | ParenthesizedElement;

ParenthesizedElement returns sg::SG:
	'(' Alternative ')';

GrammarID returns ecore::EString:
	ID ('.' ID)*;