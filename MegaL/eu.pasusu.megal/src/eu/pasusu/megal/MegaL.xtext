grammar eu.pasusu.megal.MegaL with org.eclipse.xtext.common.Terminals

generate megaL "http://www.pasusu.eu/megal/MegaL"

Model:
	(declarations+=Declaration '.')*;

Declaration:
	EntityDeclaration | AlternativeEntityDeclaration | RelationshipDeclaration | EntityTypeDeclaration |
	RelationshipTypeDeclaration;

EntityDeclaration:
	(parameter=EntityDeclarationModifier)? name=ID ('[' unqualified=STRING ']')? ('@' parent=Entity)? ':' type=EntityType
	(multiplicity=EntityDeclarationMultiplicity)?;

enum EntityDeclarationModifier:
	Extern='extern' | External='external' | Intern='intern' | Internal='internal' | Local='local' | Parameter='?' |
	Dependent='!';

enum EntityDeclarationMultiplicity:
	Plus='+' | Star='*';

AlternativeEntityDeclaration returns EntityDeclaration:
	(parameter=EntityDeclarationModifier)? type=EntityType (multiplicity=EntityDeclarationMultiplicity)? name=ID ('['
	unqualified=STRING ']')? ('@' parent=Entity)?;

RelationshipDeclaration:
	left=Entity relationship=RelationshipType right=Entity ('#' annotation=Entity)?;// Annotation -> Entity?

EntityTypeDeclaration:
	name=ID '<' supertype=EntityType;

RelationshipTypeDeclaration:
	name=ID '<' leftType=EntityType '*' rightType=EntityType;

EntityType:
	IntrinsicEntityType | DeclaredEntityType;

IntrinsicEntityType:
	value=IntrinsicEntityTypeValue;

enum IntrinsicEntityTypeValue:
	Entity | Set | Pair | Relation | Function | FunctionApplication | Language | Technology | Specification | Artifact |
	File | Folder | Fragment | Program | Library | ObjectGraph | Concept | Checker;

DeclaredEntityType:
	declaration=[EntityTypeDeclaration];

Entity:
	DeclaredEntity;

DeclaredEntity:
	declaration=[EntityDeclaration];

RelationshipType:
	IntrinsicRelationshipType |
	DeclaredRelationshipType;

IntrinsicRelationshipType:
	value=IntrinsicRelationshipTypeValue;

enum IntrinsicRelationshipTypeValue:
	subsetOf | elementOf | instanceOf | domainOf | hasRange | inputOf | hasOutput | conformsTo | partOf | shallowPartOf |
	deepPartOf | correspondsTo | dependsOn | realizationOf | definitionOf | representationOf;

DeclaredRelationshipType:
	declaration=[RelationshipTypeDeclaration];